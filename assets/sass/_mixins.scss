/**
 * Font-Size
 *
 * rem for browsers with support
 * px for ones without
 *
 * @include font-size(24)
 */
@mixin font-size($font-size: 16)
{
  font-size: #{$font-size}px;
  font-size: #{$font-size / 10}rem;
  line-height: 1.6;
}

/**
 * CSS-Hyphens [Malarky/Rock-Hammer]
 *
 * how to go about splitting words to improve the layout of text when line-wrapping.
 *
 * https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens
 * 
 * @include css-hyphens( none | manual | auto)
 */
@mixin css-hyphens($val:auto)
{
  -webkit-hyphens: $val;
     -moz-hyphens: $val;
      -ms-hyphens: $val;
       -o-hyphens: $val;
          hyphens: $val;
}

/**
 * Hide [based on Malarky/Rock-Hammer] 
 *
 * hide elements based on requirement
 * 
 * @include hide(hidden | hide-text | invisible | visually-hidden | image-replacement)
 */
@mixin hide($type)
{
  @if $type == hidden
  {
    display: none !important;
    visibility: hidden;
  }
  
  @if $type == hide-text
  {
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
  }
  
  @if $type == invisible
  {
    visibility: hidden;
  }
  
  @if $type == visually-hidden
  {
    overflow: hidden;
    position: absolute;
    clip: rect(0 0 0 0);
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    
    &.focusable {
      &:active,
      &:focus {
        position: static;
        clip: auto;
        height: auto;
        width: auto;
        margin: 0;
        overflow: visible;
      } 
    }
  }
  
  @if $type == image-replacement
  {
    background-color: transparent;
    border: 0;
    overflow: hidden;
   
    &:before {
      content: "";
      display: block;
      width: 0;
      height: 150%;
    }
  }
}


/**
 * Box-Shadow [Malarky/Rock-Hammer]
 *
 * @include box-shadow(horizontal vertical blur color)
 */
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25))
{
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

/**
 * Drop-Shadow [Malarky/Rock-Hammer]
 *
 * @include drop-shadow( horizontal vertical blur color )
 */
@mixin drop-shadow($shadow: 0 1px 3px rgba(0,0,0,.25))
{
  -webkit-drop-shadow: $shadow;
     -moz-drop-shadow: $shadow;
          drop-shadow: $shadow;
}

/**
 * Opacity [Malarky/Rock-Hammer]
 *
 * @include opacity( integer )
 */
@mixin opacity($opacity: .5)
{
  -webkit-opacity: $opacity;
     -moz-opacity: $opacity;
          opacity: $opacity;
}

/**
 * Background-Size [Malarky/Rock-Hammer]
 *
 * @include background-size( auto | % | px )
 */
@mixin background-size($size)
{
  -webkit-background-size: $size;
     -moz-background-size: $size;
       -o-background-size: $size;
          background-size: $size;
}

/**
 * Background-Clip [Malarky/Rock-Hammer]
 *
 * @include background-clip( border-box | padding-box | content-box )
 */ 
@mixin background-clip($clip)
{
  -webkit-background-clip: $clip;
     -moz-background-clip: $clip;
          background-clip: $clip;
}

/**
 * Text-Overflow [Malarky/Rock-Hammer]
 *
 * @include text-overflow()
 */
 @mixin text-overflow {
   overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
 }
 
 /**
  * Zero [Malarky/Rock-Hammer]
  *
  * zero out margin and padding
  *
  * @include zero()
  */
@mixin zero {
  margin: 0;
  padding: 0;
}

/**
 * Breakpoint [Malarky/Rock-Hammer]
 *
 *
 *
 *
 * @include media-query-bp(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
 */
@mixin breakpoint($unit, $query1: min, $query2: width, $target: "")
{
	$mqtarget: "";
	// Check if media queries are supported
	@if $media-queries-supported == true {
		@if $target != "" {
			@media #{$target} and (#{$query1}-#{$query2}: #{$unit}) {
				@content;
			}
		}
		@else {
			@media (#{$query1}-#{$query2}: #{$unit}) {
				@content;
			}
		}
	}
	@else {
		#{$no-mq-classname} & {
			@content;
		}
	}
}


/**
 * Clearfix
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
@mixin clearfix()
{
  &:before,
  &:after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }
  
  &:after {
    clear: both;
  }
}




// FlexBox
//
// CSS Tricks + MDN
// http://css-tricks.com/snippets/css/a-guide-to-flexbox/
// =====================================================

/**
 * Flexbox
 */
@mixin flexbox()
{
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

/**
 * Flex
 *
 * @include flex( 1, 200px)
 */
@mixin flex($flex, $width)
{
  -webkit-box-flex: $flex;  
     -moz-box-flex: $flex;
             width: $width;
      -webkit-flex: $flex;
          -ms-flex: $flex;
              flex: $flex;
}

/**
 * Flex-Direction
 *
 * @include flex-direction( row | row-reverse | column | column-reverse)
 */
@mixin flex-direction($direction)
{
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

/**
 * Flex-Wrap
 *
 * @include flex-wrap( nowrap | wrap | wrap-reverse )
 */
@mixin flex-wrap($wrap)
{
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

/**
 * Content-Justify
 *
 * @include content-justify( flex-start | flex-end | center | space-between | space-around )
 */
 @mixin content-justify($justify)
 {
   -webkit-content-justify: $justify;
      -moz-content-justify: $justify;
        -o-content-justify: $justify;
           content-justify: $justify;
 }
 
 /**
  * Align-Items
  *
  * @include align-items( flex-start | flex-end | center | baseline | stretch )
  */
@mixin align-items($align)
{
  -webkit-align-items: $align;
     -moz-align-items: $align;
       -o-align-items: $align;
          align-items: $align;
}

 /**
  * Align-Content
  *
  * @include align-content( flex-start | flex-end | center |  space-between | space-around | stretch )
  */
@mixin align-content($align)
{
  -webkit-align-content: $align;
     -moz-align-content: $align;
       -o-align-content: $align;
          align-content: $align;
}

/**
 * Order
 *
 * @include order( integer )
 */
@mixin order($order)
{
  -webkit-box-ordinal-group: $order;
     -moz-box-ordinal-group: $order;
             -ms-flex-order: $order;
              -webkit-order: $order;
                      order: $order;
}